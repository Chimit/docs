"use strict";(self.webpackChunknutgram_docs=self.webpackChunknutgram_docs||[]).push([[3530],{49120:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return r},default:function(){return c},frontMatter:function(){return a},metadata:function(){return g},toc:function(){return l}});var o=n(83117),i=(n(67294),n(3905));n(56022);const a={sidebar_position:3},r="Logging",g={unversionedId:"configuration/logging",id:"configuration/logging",title:"Logging",description:"Nutgram accepts as a logger system any adapter that implements the PSR-3 LoggerInterface interface.",source:"@site/docs/configuration/logging.md",sourceDirName:"configuration",slug:"/configuration/logging",permalink:"/docs/configuration/logging",draft:!1,editUrl:"https://github.com/nutgram/docs/tree/master/docs/configuration/logging.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Cache",permalink:"/docs/configuration/cache"},next:{title:"Laravel Integration",permalink:"/docs/configuration/laravel"}},s={},l=[{value:"Configuration",id:"configuration",level:2}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"logging"},"Logging"),(0,i.kt)("p",null,"Nutgram accepts as a logger system any adapter that implements the PSR-3 ",(0,i.kt)("inlineCode",{parentName:"p"},"LoggerInterface")," interface."),(0,i.kt)("p",null,"By default, it uses the internal ",(0,i.kt)("inlineCode",{parentName:"p"},"NullLogger"),' class,\nwhich is a fall-back "black hole" implementation if no logger is given to it.'),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"If you are using Laravel, you can skip this section, since the service provider automatically inject the Laravel logger repository for you."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"/docs/configuration/laravel"},"Check out the Laravel integration page"))),(0,i.kt)("p",null,"To specify a different logger adapter, you need to pass the instance at the bot instantiation. The following example, we\nare using the built-in ",(0,i.kt)("inlineCode",{parentName:"p"},"SergiX44\\Nutgram\\Logger\\ConsoleLogger"),", that can be used to log the requests to the console.\nUseful when used with Polling running mode."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use SergiX44\\Nutgram\\Nutgram;\nuse SergiX44\\Nutgram\\Logger\\ConsoleLogger;\n\n$bot = new Nutgram('TOKEN', [\n    'logger' => ConsoleLogger::class\n]);\n")))}c.isMDXComponent=!0}}]);