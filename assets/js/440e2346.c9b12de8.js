"use strict";(self.webpackChunknutgram_docs=self.webpackChunknutgram_docs||[]).push([[6015],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,g=p["".concat(l,".").concat(d)]||p[d]||m[d]||s;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<s;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},59245:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return m}});var a=n(83117),r=n(80102),s=(n(67294),n(3905)),i=["components"],o={},l="Bulk Messenger",u={unversionedId:"usage/bulk_messenger",id:"usage/bulk_messenger",title:"Bulk Messenger",description:"This feature is experimental and it may change in the future.",source:"@site/docs/usage/bulk_messenger.md",sourceDirName:"usage",slug:"/usage/bulk_messenger",permalink:"/docs/usage/bulk_messenger",editUrl:"https://github.com/nutgram/docs/tree/master/docs/usage/bulk_messenger.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Extend",permalink:"/docs/usage/extend"},next:{title:"Testing",permalink:"/docs/category/testing"}},c={},m=[{value:"Methods",id:"methods",level:2},{value:"Usage",id:"usage",level:2}],p={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"bulk-messenger"},"Bulk Messenger"),(0,s.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"This feature is ",(0,s.kt)("strong",{parentName:"p"},"experimental")," and it may change in the future."))),(0,s.kt)("p",null,"Bulk Messenger is a tool that lets you automatically send Telegram Messages to a list of Chats."),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"using(callable $action)")," - Executes the given action with the current instance of the Bulk Messenger.",(0,s.kt)("br",null),"\nDefault:",(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-php"},"function (Nutgram $bot, int $chatId) {\n    $bot->sendMessage($this->text, array_merge($this->opt, ['chat_id' => $chatId]));\n};\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"setChats(array $chats)")," - Sets the chats to send the message to.",(0,s.kt)("br",null),"\nDefault: ",(0,s.kt)("inlineCode",{parentName:"li"},"[]")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"setInterval(int $seconds)")," - Sets the interval between each message.",(0,s.kt)("br",null),"\nDefault: ",(0,s.kt)("inlineCode",{parentName:"li"},"2")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"setText(string $text)")," - Sets the text of the message.",(0,s.kt)("br",null),"\nDefault: ",(0,s.kt)("inlineCode",{parentName:"li"},"'Hello!'")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"setOpt(array $params)")," - Sets the parameters of the message.",(0,s.kt)("br",null),"\nDefault: ",(0,s.kt)("inlineCode",{parentName:"li"},"[]")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"startAsync()")," - Starts the sending process in the background.",(0,s.kt)("br",null),"\nSupported OS: ",(0,s.kt)("inlineCode",{parentName:"li"},"Linux"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"MacOS"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"startSync()")," - Starts the sending process in the foreground.",(0,s.kt)("br",null),"\nSupported OS: ",(0,s.kt)("inlineCode",{parentName:"li"},"Linux"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"Windows"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"MacOS"),".")),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-php"},"use SergiX44\\Nutgram\\Nutgram;\n\n$bot = new Nutgram($_ENV['TOKEN']);\n\n$chats = [];\n\n// Using the default sendMessage method ***************************************\n\n// in scripts\n$bot->getBulkMessenger()\n    ->setChats($chats)\n    ->setText('Hello!')\n    ->setOpt([/* optional parameters */])\n    ->startSync()\n\n// inside handlers (polling)\n$bot->onCommand('start', function (Nutgram $bot) use ($chats) {\n    $bot->getBulkMessenger()\n        ->setChats($chats)\n        ->setText('Hello!')\n        ->setOpt([/* optional parameters */])\n        ->startAsync();\n});\n$bot->run();\n\n// Using a custom method ******************************************************\n\n// in scripts\n$bot->getBulkMessenger()\n    ->setChats($chats)\n    ->using(fn (Nutgram $bot, int $chatId) => $bot->sendDocument($document, ['chat_id' => $chatId]))\n    ->startSync();\n\n// inside handlers (polling)\n$bot->onCommand('start', function (Nutgram $bot) use ($document, $chats) {\n    $bot->getBulkMessenger()\n        ->setChats($chats)\n        ->using(fn (Nutgram $bot, int $chatId) => $bot->sendDocument($document, ['chat_id' => $chatId]))\n        ->startAsync();\n});\n$bot->run();\n\n")))}d.isMDXComponent=!0}}]);