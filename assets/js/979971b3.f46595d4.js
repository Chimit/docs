"use strict";(self.webpackChunknutgram_docs=self.webpackChunknutgram_docs||[]).push([[1710],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,l(l({ref:n},c),{},{components:t})):r.createElement(f,l({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},57400:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var r=t(83117),a=t(80102),o=(t(67294),t(3905)),l=["components"],i={sidebar_position:6},u="Inline Menu",s={unversionedId:"usage/inline_menu",id:"version-1.x/usage/inline_menu",title:"Inline Menu",description:"The InlineMenu class extends Conversation and help you to provide an easy interface to",source:"@site/versioned_docs/version-1.x/usage/inline_menu.md",sourceDirName:"usage",slug:"/usage/inline_menu",permalink:"/docs/1.x/usage/inline_menu",editUrl:"https://github.com/nutgram/docs/tree/master/versioned_docs/version-1.x/usage/inline_menu.md",tags:[],version:"1.x",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docs",previous:{title:"Conversations",permalink:"/docs/1.x/usage/conversations"}},c={},p=[{value:"Methods",id:"methods",level:2},{value:"Example",id:"example",level:2}],m={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"inline-menu"},"Inline Menu"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"InlineMenu")," class extends ",(0,o.kt)("a",{parentName:"p",href:"/docs/1.x/usage/conversations"},"Conversation")," and help you to provide an easy interface to\ncreate inline menu messages in your bot."),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"menuText(string $text, array $opt = [])"),(0,o.kt)("br",null),"\nSet the message text and the optional message parameters")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"addButtonRow(... InlineKeyboardButton $buttons)"),(0,o.kt)("br",null),"\nSet a row of buttons to the current message",(0,o.kt)("br",null),"\nWhen you use a button with ",(0,o.kt)("inlineCode",{parentName:"p"},"callback_data"),", you must set\nthe value as ",(0,o.kt)("inlineCode",{parentName:"p"},"callbackData@methodName")," and create a method with the name ",(0,o.kt)("inlineCode",{parentName:"p"},"methodName"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"clearButtons()"),(0,o.kt)("br",null),"\nRemove the buttons from the current message")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"orNext(?string $orNext)"),(0,o.kt)("br",null),"\nCall a method if there is no matching handlers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"showMenu(bool $reopen = false, bool $noHandlers = false, bool $noMiddlewares = false)"),(0,o.kt)("br",null),"\nSend the message with buttons")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"closeMenu()"),(0,o.kt)("br",null),"\nClose the menu deleting the current message"))),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"class ChooseColorMenu extends InlineMenu\n{\n\n    public function start(Nutgram $bot)\n    {\n        $this->menuText('Choose a color:')\n            ->addButtonRow(InlineKeyboardButton::make('Red', callback_data: 'red@handleColor'))\n            ->addButtonRow(InlineKeyboardButton::make('Green', callback_data: 'green@handleColor'))\n            ->addButtonRow(InlineKeyboardButton::make('Yellow', callback_data: 'yellow@handleColor'))\n            ->orNext('none')\n            ->showMenu();\n    }\n\n    public function handleColor(Nutgram $bot)\n    {\n        $color = $bot->callbackQuery()->data;\n        $this->menuText(\"Choosen: $color!\")\n            ->showMenu();\n    }\n\n    public function none(Nutgram $bot)\n    {\n        $bot->sendMessage('Bye!');\n        $this->end();\n    }\n}\n")),(0,o.kt)("p",null,"Result:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://i.imgur.com/IQ63ruH.gif",alt:"example"})))}d.isMDXComponent=!0}}]);