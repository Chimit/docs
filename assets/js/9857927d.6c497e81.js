"use strict";(self.webpackChunknutgram_docs=self.webpackChunknutgram_docs||[]).push([[1778],{60096:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return i},metadata:function(){return r},toc:function(){return d}});var a=n(83117),s=(n(67294),n(3905));n(56022);const i={sidebar_position:2},o="Sending Requests",r={unversionedId:"usage/sending_requests",id:"usage/sending_requests",title:"Sending Requests",description:"The framework creates a 1:1 mapping of the methods Telegram provides that are directly accessible from the main",source:"@site/docs/usage/sending_requests.md",sourceDirName:"usage",slug:"/usage/sending_requests",permalink:"/docs/next/usage/sending_requests",draft:!1,editUrl:"https://github.com/nutgram/docs/tree/master/docs/usage/sending_requests.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Getting Updates",permalink:"/docs/next/usage/getting_updates"},next:{title:"Handlers",permalink:"/docs/next/usage/handlers"}},l={},d=[{value:"Uploading media",id:"uploading-media",level:2},{value:"Downloading media",id:"downloading-media",level:2},{value:"Formatting options",id:"formatting-options",level:2},{value:"Available methods",id:"available-methods",level:2},{value:"Chunked methods",id:"chunked-methods",level:2}],m={toc:d};function g(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"sending-requests"},"Sending Requests"),(0,s.kt)("p",null,"The framework creates a 1:1 mapping of the methods Telegram provides that are directly accessible from the main\ninstance. The parameters of these methods are organized to prioritize mandatory parameters, followed by optional ones.\nIf the ",(0,s.kt)("inlineCode",{parentName:"p"},"$clientOpt")," parameter is included, it will consistently be positioned at the end.\nWe recommend the use of named parameters, which allow the developer to explicitly specify the values for each parameter,\nmaking the code easier to read and maintain."),(0,s.kt)("p",null,"For example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-php"},"\nuse SergiX44\\Nutgram\\Nutgram;\nuse SergiX44\\Nutgram\\Telegram\\Types\\Message\\Message;\n\n$bot = new Nutgram($_ENV['TOKEN']);\n\n// Send a message to a specific user\n/** @var Message $message */\n$message = $bot->sendMessage(\n    text: 'Hi!',\n    chat_id: 111222333\n);\n\n// Send a message to a channel\n/** @var Message $message */\n$message = $bot->sendMessage(\n    text: 'Hi channel!',\n    chat_id: '@mychannel'\n);\n")),(0,s.kt)("h2",{id:"uploading-media"},"Uploading media"),(0,s.kt)("p",null,"For any method that require an ",(0,s.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots/api#inputfile"},(0,s.kt)("inlineCode",{parentName:"a"},"InputFile")),", you can pass a resource file\ndescriptor to the right method, and the framework will take care of how uploading it, like in the following example."),(0,s.kt)("p",null,"If you already have the Telegram ",(0,s.kt)("inlineCode",{parentName:"p"},"file_id"),", you can simply specify it."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-php"},"use SergiX44\\Nutgram\\Nutgram;\nuse SergiX44\\Nutgram\\Telegram\\Types\\Internal\\InputFile;\nuse SergiX44\\Nutgram\\Telegram\\Types\\Message\\Message;\n\n$bot = new Nutgram($_ENV['TOKEN']);\n\n// Send a photo to a specific user ***********************************************\n$photo = fopen('image.png', 'r+'); // open the file\n\n/** @var Message $message */\n$message = $bot->sendPhoto(\n    photo: InputFile::make($photo), // create the input file\n    chat_id: 111222333\n);\n\n\n// Send a video to a specific user ***********************************************\n$video = fopen('funnyvideo.mp4', 'r+'); // open the file\n\n/** @var Message $message */\n$message = $bot->sendVideo(\n    video: InputFile::make($video),\n    chat_id: 111222333\n);\n\n\n// send a sticker via file_id ****************************************************\n$fileId = $bot->message()->sticker->file_id;\n\n/** @var Message $message */\n$message = $bot->sendSticker(\n    sticker: $fileId,\n    chat_id: 111222333\n);\n")),(0,s.kt)("h2",{id:"downloading-media"},"Downloading media"),(0,s.kt)("p",null,"As opposed to uploading, there are some additional methods available that allow you to download files:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-php"},"use SergiX44\\Nutgram\\Nutgram;\nuse SergiX44\\Nutgram\\Telegram\\Types\\Media\\File;\n\n$bot = new Nutgram($_ENV['TOKEN']);\n\n$fileId = $bot->message()->sticker->file_id;\n\n// get the File object\n/** @var File $message */\n$file = $bot->getFile($fileId);\n\n$bot->downloadFile($file, 'path/to/file');\n\n// OR, via helper method\n\n$bot->getFile($fileId)->save('file/or/directory');\n\n")),(0,s.kt)("h2",{id:"formatting-options"},"Formatting options"),(0,s.kt)("p",null,"The framework give you some helper constants to format your text messages:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-php"},"use SergiX44\\Nutgram\\Nutgram;\nuse SergiX44\\Nutgram\\Telegram\\Attributes\\ParseMode;\nuse SergiX44\\Nutgram\\Telegram\\Types\\Message\\Message;\n\n$bot = new Nutgram($_ENV['TOKEN']);\n\n// Send a message formatting in markdown\n/** @var Message $message */\n$message = $bot->sendMessage(\n    text: '*Hi!*',\n    chat_id: 111222333,\n    parse_mode: ParseMode::MARKDOWN,\n);\n\n// Send a message formatting in html\n/** @var Message $message */\n$message = $bot->sendMessage(\n    text: '<i>Hi!</i>',\n    chat_id: 111222333,\n    parse_mode: ParseMode::HTML,\n);\n")),(0,s.kt)("h2",{id:"available-methods"},"Available methods"),(0,s.kt)("p",null,"See the ",(0,s.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots/api#available-methods"},"Telegram Bot API")," for the available native methods."),(0,s.kt)("h2",{id:"chunked-methods"},"Chunked methods"),(0,s.kt)("p",null,"Nutgram helps manage character limits by splitting messages into smaller ones,\nmaking it easier to stay within the limits set by platforms or media.\nChunking methods allow users to transmit longer messages without exceeding the maximum character limits."),(0,s.kt)("p",null,"Available chunked methods:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"sendChunkedMessage"),(0,s.kt)("li",{parentName:"ul"},"sendChunkedPhoto"),(0,s.kt)("li",{parentName:"ul"},"sendChunkedAudio"),(0,s.kt)("li",{parentName:"ul"},"sendChunkedDocument"),(0,s.kt)("li",{parentName:"ul"},"sendChunkedVideo"),(0,s.kt)("li",{parentName:"ul"},"sendChunkedAnimation"),(0,s.kt)("li",{parentName:"ul"},"sendChunkedVoice")))}g.isMDXComponent=!0}}]);