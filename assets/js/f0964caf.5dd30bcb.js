"use strict";(self.webpackChunknutgram_docs=self.webpackChunknutgram_docs||[]).push([[2422],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(t),d=r,h=c["".concat(u,".").concat(d)]||c[d]||m[d]||o;return t?a.createElement(h,l(l({ref:n},p),{},{components:t})):a.createElement(h,l({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=c;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},92733:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return m}});var a=t(83117),r=t(80102),o=(t(67294),t(3905)),l=["components"],i={sidebar_position:6},u="Inline Menu",s={unversionedId:"usage/inline_menu",id:"usage/inline_menu",title:"Inline Menu",description:"The InlineMenu class extends Conversation and help you to provide an easy interface to",source:"@site/docs/usage/inline_menu.md",sourceDirName:"usage",slug:"/usage/inline_menu",permalink:"/docs/usage/inline_menu",editUrl:"https://github.com/nutgram/docs/tree/master/docs/usage/inline_menu.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docs",previous:{title:"Conversations",permalink:"/docs/usage/conversations"},next:{title:"Extend",permalink:"/docs/usage/extend"}},p={},m=[{value:"Methods",id:"methods",level:2},{value:"Changing Telegram method type",id:"changing-telegram-method-type",level:3},{value:"Example",id:"example",level:2}],c={toc:m};function d(e){var n=e.components,t=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"inline-menu"},"Inline Menu"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"InlineMenu")," class extends ",(0,o.kt)("a",{parentName:"p",href:"/docs/usage/conversations"},"Conversation")," and help you to provide an easy interface to\ncreate inline menu messages in your bot."),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"menuText(string $text, array $opt = [])"),(0,o.kt)("br",null),"\nSet the message text and the optional message parameters")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"addButtonRow(... InlineKeyboardButton $buttons)"),(0,o.kt)("br",null),"\nSet a row of buttons to the current message",(0,o.kt)("br",null),"\nWhen you use a button with ",(0,o.kt)("inlineCode",{parentName:"p"},"callback_data"),", you must set\nthe value as ",(0,o.kt)("inlineCode",{parentName:"p"},"callbackData@methodName")," and create a method with the name ",(0,o.kt)("inlineCode",{parentName:"p"},"methodName"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"clearButtons()"),(0,o.kt)("br",null),"\nRemove the buttons from the current message")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"orNext(?string $orNext)"),(0,o.kt)("br",null),"\nCall a method if there is no matching handlers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"showMenu(bool $reopen = false, bool $noHandlers = false, bool $noMiddlewares = false)"),(0,o.kt)("br",null),"\nSend the message with buttons")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"closeMenu()"),(0,o.kt)("br",null),"\nClose the menu deleting the current message"))),(0,o.kt)("h3",{id:"changing-telegram-method-type"},"Changing Telegram method type"),(0,o.kt)("p",null,"Override the following methods only to change the Telegram method used:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"doOpen()"),(0,o.kt)("br",null),"\nSend the message. Default: ",(0,o.kt)("inlineCode",{parentName:"p"},"sendMessage"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"doUpdate()"),(0,o.kt)("br",null),"\nEdit the message. Default: ",(0,o.kt)("inlineCode",{parentName:"p"},"editMessageText"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"doClose()"),(0,o.kt)("br",null),"\nDelete the message. Default: ",(0,o.kt)("inlineCode",{parentName:"p"},"deleteMessage")))),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"class ChooseColorMenu extends InlineMenu\n{\n\n    public function start(Nutgram $bot)\n    {\n        $this->menuText('Choose a color:')\n            ->addButtonRow(InlineKeyboardButton::make('Red', callback_data: 'red@handleColor'))\n            ->addButtonRow(InlineKeyboardButton::make('Green', callback_data: 'green@handleColor'))\n            ->addButtonRow(InlineKeyboardButton::make('Yellow', callback_data: 'yellow@handleColor'))\n            ->orNext('none')\n            ->showMenu();\n    }\n\n    public function handleColor(Nutgram $bot)\n    {\n        $color = $bot->callbackQuery()->data;\n        $this->menuText(\"Choosen: $color!\")\n            ->showMenu();\n    }\n\n    public function none(Nutgram $bot)\n    {\n        $bot->sendMessage('Bye!');\n        $this->end();\n    }\n}\n")),(0,o.kt)("p",null,"Result:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://i.imgur.com/IQ63ruH.gif",alt:"example"})))}d.isMDXComponent=!0}}]);